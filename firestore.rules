rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /News/{news}{
    	allow read: if true;
      allow write: if exists(/databases/$(database)/documents/Admins/$(request.auth.uid));
    }
    match /Experiences/{experience}{
    	allow read: if true;
      allow write: if exists(/databases/$(database)/documents/Participants/$(request.auth.uid));
    }
    match /Tokens/{token}{
    	allow read: if true;
      allow write: if exists(/databases/$(database)/documents/Participants/$(request.auth.uid));
    }
    match /Quests/{quest}{
    	allow read: if true;
      allow write: if exists(/databases/$(database)/documents/Participants/$(request.auth.uid));
    }
    match /QuestTakers/{questTaker}{
    	allow read: if true;
      allow write: if exists(/databases/$(database)/documents/Participants/$(request.auth.uid));
    }
    match /Admins/{admin} {
      allow read,write: if exists(/databases/$(database)/documents/Admins/$(request.auth.uid));
    }
    match /Addresses/{address}{
    	allow read,write: if true;
    }
    match /Assertions/{assertions}{
    	allow read: if request.auth.uid != null;
      allow write: if get(/databases/$(database)/documents/Issuers/$(request.auth.uid)).data.validated == true|| 
      	exists(/databases/$(database)/documents/Admins/$(request.auth.uid));
      allow create: if request.resource.data['issuedOn'] == "2000-01-01";
    }
    match /Badges/{badges}{
    	allow read: if true;
      allow write: if get(/databases/$(database)/documents/Issuers/$(request.auth.uid)).data.validated == true ||
      	exists(/databases/$(database)/documents/Admins/$(request.auth.uid));
    }
    match /Beacons/{beacons}{
    	allow read: if request.auth.uid !=null;
    	allow write: if exists(/databases/$(database)/documents/Admins/$(request.auth.uid));
    }
    match /Issuers/{issuer}{
    	allow read: if true;
      allow create: if request.auth.uid !=null && request.resource.data.validated == false;
      allow write: if exists(/databases/$(database)/documents/Admins/$(request.auth.uid));
    }
    match /Opportunities/{opportunity}{
    	allow read;
      allow write: if exists(/databases/$(database)/documents/Admins/$(request.auth.uid)); 
      allow create: if get(/databases/$(database)/documents/Issuers/$(request.auth.uid)).data.validated == true
      && request.resource.data.authority == 0;
      allow update: if ((request.writeFields.size() == 1) && ('participations' in request.writeFields));
    }
    match /Participants/{participant}{
    	allow write: if request.auth != null && request.auth.uid == participant;
      allow create: if false; // creation is done via firebase functions
      allow read: if request.auth != null && (request.auth.uid == participant || get(/databases/$(database)/documents/Issuers/$(request.auth.uid)).data.validated == true);
    }
    match /Participations/{participation}{
      allow write: if request.auth.uid != null;
      allow read: if request.auth.uid != null;
    }
    match /PrivacyPage/{page}{
    	allow read: if true;
    }
    match /Voorwaarden/{page}{
    	allow read: if true;
    }
    match /OverOns/{page}{
    	allow read: if true;
    }
    
    match /BadgrAuth/{auth}{
    	allow read: if false;
      allow write: if false
    }
    
  }
}
